[{"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/index.tsx":"1","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/reportWebVitals.ts":"2","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/App.tsx":"3","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/HomePage/HomePage.tsx":"4","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Login/Login.tsx":"5","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Main/Main.tsx":"6","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Settings/Settings.tsx":"7","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/ZoneSpecification/ZoneSpecification.tsx":"8","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/ConversationList/ConversationList.tsx":"9","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Conversation/Conversation.tsx":"10"},{"size":674,"mtime":1608302705229,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1608234521223,"results":"13","hashOfConfig":"12"},{"size":310,"mtime":1608239143372,"results":"14","hashOfConfig":"12"},{"size":764,"mtime":1608239272911,"results":"15","hashOfConfig":"12"},{"size":1352,"mtime":1608302705222,"results":"16","hashOfConfig":"12"},{"size":2920,"mtime":1608302705222,"results":"17","hashOfConfig":"12"},{"size":679,"mtime":1608302705223,"results":"18","hashOfConfig":"12"},{"size":2744,"mtime":1608302705224,"results":"19","hashOfConfig":"12"},{"size":4219,"mtime":1608302705220,"results":"20","hashOfConfig":"12"},{"size":1264,"mtime":1608239143375,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ap2qa1",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/index.tsx",["50"],"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/reportWebVitals.ts",[],["51","52"],"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/App.tsx",["53","54","55","56"],"import React from 'react';\nimport logo from './logo.svg';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\nimport './App.css';\nimport HomePage from './pages/HomePage/HomePage';\n\nfunction App() {\n  return (\n    <Router>\n      <HomePage/>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/HomePage/HomePage.tsx",[],"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Login/Login.tsx",["57","58","59"],"import { Button, TextField } from '@material-ui/core';\nimport React, {Component} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport LoginProps from '../../Model/LoginProps';\nimport './Login.css'\n\ninterface LoginState {\n    [key: string]: any;\n}\n\nexport default class Login extends React.Component<LoginProps, LoginState>{\n    constructor(props: LoginProps){\n        super(props);\n        this.state = {\n            userMatricule: '',\n            userPassword: '',\n        }\n    }\n\n    \n\n    render(){\n        return (\n            <div>\n                <img className=\"img-login\" src=\"https://storage.lebonguide.com/crop-1600x700/7/94/565CF6F3-EA3E-48DB-B255-668E5856CCEB.png\" alt=\"background-image\"/>\n                <div className=\"frame-login\">\n                    <div className='title-login'><h2>CONNEXION</h2></div>\n                    <div className=\"login-form\">\n                        <TextField className=\"input-login\" id=\"outlined-basic\" label=\"Matricule\" variant=\"outlined\" /><br/>\n                        <TextField className='input-login' id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" /><br/><br/>\n                        <Button className='button-login' variant=\"contained\" color=\"primary\" href=\"/app\">Connexion</Button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\n","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Main/Main.tsx",["60","61","62","63","64","65","66","67","68"],"import React  from 'react';\nimport MainProps from './MainProps';\nimport { Route, BrowserRouter as Router, Switch, Link } from 'react-router-dom';\nimport Settings from '../Settings/Settings';\nimport Conversation from '../Conversation/Conversation';\n\n\nconst Main: React.FunctionComponent<MainProps> = (props) => {\n    return (\n        <Router>\n            <Link to=\"/app/settings\">settings</Link>\n            <Switch>\n                <Route path=\"/app/settings\" component={Settings} exact/>\n                <Route path=\"/app/conversation\" component={Conversation} exact/>\n            </Switch>\n        </Router>\n    )\n}\n\nexport default Main;","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Settings/Settings.tsx",["69","70"],"import { Divider, List, ListItem, ListItemText } from '@material-ui/core';\nimport React, {Component} from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n);\n\nexport default function Settings (){\n  const classes = useStyles();\n  return( \n    <div> \n    <Divider />\n      <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n        <ListItem button>\n          <ListItemText primary=\"Trash\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n\n}\n","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/ZoneSpecification/ZoneSpecification.tsx",["71","72"],"import { Button, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel } from '@material-ui/core';\nimport React, {Component} from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport imgcorse from './img-corse-map.png'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      position: 'absolute',\n        top: '17%',\n        left: '20%',\n    },\n    formControl: {\n      margin: theme.spacing(3),\n    },\n    imgmap:{\n        position: 'absolute',\n        right: '20%',\n        top: '17%',\n    },\n    buttonZone:{\n        position: 'absolute',\n        left: '30%',\n        bottom: '25%',\n    }\n  }),\n);\n\nexport default function Zone (){\n  const classes = useStyles();\n  return( \n        <div>\n            <img className={classes.imgmap} src={imgcorse} alt=\"image map corse\"/>\n            <div className={classes.root}>\n                <FormControl component=\"fieldset\" className={classes.formControl}>\n                    <FormLabel component=\"legend\">Sélectionner la ou les zone(s) d'intervention</FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                        value=\"BOGB\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"BOGB - Grand Bastia\"\n                        />\n                        <FormControlLabel\n                        value=\"BOCPO\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"BOCPO - Corte/Ghisonaccia\"\n                        />\n                        <FormControlLabel\n                        value=\"BOBA\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"BOBA - Balagne\"\n                        />\n                        <FormControlLabel\n                        value=\"BOES\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"BOES - Extrême Sud\"\n                        />\n                        <FormControlLabel\n                        value=\"BOVA\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"BOVA - Valincu\"\n                        />\n                        <FormControlLabel\n                        value=\"BOGA\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"BOGA - Grand Ajaccio\"\n                        />\n                    </FormGroup>\n                </FormControl>\n            </div>\n          <br/><br/>\n          <Button className={classes.buttonZone} variant=\"contained\" color=\"primary\" href=\"/app/conversationlist\">\n            Confirmer\n          </Button>\n        </div>\n  )\n}\n","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/ConversationList/ConversationList.tsx",["73","74","75","76","77","78","79"],"import { Divider, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport React, {Component} from 'react';\nimport './ConversationList.css'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport MailIcon from '@material-ui/icons/Mail';\nimport DraftsIcon from '@material-ui/icons/Drafts';\n\nclass ConvList extends React.Component {\n    state = {\n      conv1DisplayValue : \"none\",\n      conv2DisplayValue : \"none\"\n    }\n    render (){\n        let display1Class = \"display\"\n        let display2Class = \"display\"\n        console.log(this.state)\n        if(this.state.conv1DisplayValue == \"none\") display1Class = \"displayNone\"\n        if(this.state.conv2DisplayValue == \"none\") display2Class = \"displayNone\"\n        return(\n            <div>\n                <div className=\"menu-conv\">\n                    <List component=\"nav\" aria-label=\"main mailbox folders\">\n                    <ListItem>\n                        <ListItemIcon>\n                        <MailIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Messages Télétransmis\"/>\n                    </ListItem>\n                    </List>\n                    <Divider />\n                    <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n                    <ListItem button onClick={() => {this.setState({conv2DisplayValue: \"none\",conv1DisplayValue: \"unset\"})}}>\n                        <ListItemText primary=\"CEX - Demande de mise en RNE - BOCPO\"/>\n                    </ListItem>\n                    <ListItem button onClick={() => {this.setState({conv1DisplayValue: \"none\",conv2DisplayValue: \"unset\"})}}>\n                        <ListItemText primary=\"CCO - Demande de mise en RESEAUX - BOCPO\"/>\n                    </ListItem>\n                    </List>\n                </div>\n                <div className={display1Class}>\n                    <div className=\"Messages\">\n                        <div className='Message1'>\n                            <p>Je te demande la mise en RNE du Départ 25 LUCCIANA du Poste Source CERVIONE</p>\n                        </div>\n                        <div className='Message2'>\n                            <p>Je te demande la mise en RNE du Départ 25 LUCCIANA du Poste Source CERVIONE</p>\n                            <p className=\"confirmed-message\">message confirmé</p>\n                        </div>\n                    </div>\n                </div>\n                <div className={display2Class}>\n                    <div className=\"Messages\">\n                        <div className='Message1'>\n                            <p>Je te demande la mise en RESEAU du Départ 16MONTE ainsi que de la MC CASAMOZZA 2 du Poste Source LUCCIANA selon NITST n°20.crs.4369.A</p>\n                        </div>\n                        <div className='Message2'>\n                            <p>Je te demande la mise en RESEAU du Départ 10MONTE  ainsi que de la MC CASAMOZZA 2 du Poste Source LUCCIANA</p>\n                            <p className=\"confirmed-message\">message édité</p>\n                        </div>\n                        <div className='Message3'>\n                            <p>Je te demande la mise en RESEAU du Départ 10MONTE  ainsi que de la MC CASAMOZZA 2 du Poste Source LUCCIANA</p>\n                        </div>\n                        <div className='Message4'>\n                            <p>Je te demande la mise en RESEAU du Départ 10MONTE  ainsi que de la MC CASAMOZZA 2 du Poste Source LUCCIANA</p>\n                            <p className=\"confirmed-message\">message confirmé</p>\n                        </div>\n                        <div className='Message5'>\n                            <p>Je te demande la mise en RESEAU du Départ 10MONTE  ainsi que de la MC CASAMOZZA 2 du Poste Source LUCCIANA</p>\n                            <Button className=\"validation-button\" variant=\"contained\" color=\"primary\">\n                                Confirmer\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ConvList;\n\n","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Conversation/Conversation.tsx",["80","81","82"],"import * as fs from \"fs\";\nimport prettier from \"prettier\";\nimport React from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\n\ninterface ConvState {\n  [key: string]: any;\n}\n\ninterface ConvProps {\n  \n}\n\nexport default class Conversation extends React.Component<ConvProps, ConvState>{\n  constructor(props: ConvProps){\n    super(props);\n    this.state = {\n        userMatricule: '',\n        userPassword: '',\n    }\n  }\n  render() {\n    return (\n      <div>\n          <h1>Hello world</h1>\n          <div id=\"headerConvo\">\n            <div id=\"emetteur\">\n                id EMETTEUR = 7565\n                FRAU\n                AXEL\n                CEX\n                Priorité faible\n            </div>\n            <div id=\"infosConv\">\n                <button>Telecharger</button>\n            </div>\n            <div id=\"recepteur\">\n                id RECEPTEUR = 75675\n                FIGARELLI\n                Lisa\n                CCO\n                Priorité faible\n            </div>\n          </div>\n          <div id=\"convo\">\n              vide normalement et on ajoute els messages\n          </div>\n          <div id=\"userButtons\">\n              <button>Confirmer</button>\n              <button>Editer</button>\n          </div>\n      </div>\n    );\n  }\n}",{"ruleId":"83","severity":1,"message":"84","line":7,"column":8,"nodeType":"85","messageId":"86","endLine":7,"endColumn":19},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"83","severity":1,"message":"91","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":12},{"ruleId":"83","severity":1,"message":"92","line":3,"column":35,"nodeType":"85","messageId":"86","endLine":3,"endColumn":40},{"ruleId":"83","severity":1,"message":"93","line":3,"column":42,"nodeType":"85","messageId":"86","endLine":3,"endColumn":46},{"ruleId":"83","severity":1,"message":"94","line":3,"column":48,"nodeType":"85","messageId":"86","endLine":3,"endColumn":54},{"ruleId":"83","severity":1,"message":"95","line":2,"column":16,"nodeType":"85","messageId":"86","endLine":2,"endColumn":25},{"ruleId":"83","severity":1,"message":"96","line":3,"column":10,"nodeType":"85","messageId":"86","endLine":3,"endColumn":20},{"ruleId":"97","severity":1,"message":"98","line":25,"column":17,"nodeType":"99","endLine":25,"endColumn":165},{"ruleId":"83","severity":1,"message":"93","line":4,"column":50,"nodeType":"85","messageId":"86","endLine":4,"endColumn":54},{"ruleId":"83","severity":1,"message":"100","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":20},{"ruleId":"83","severity":1,"message":"101","line":7,"column":10,"nodeType":"85","messageId":"86","endLine":7,"endColumn":16},{"ruleId":"83","severity":1,"message":"102","line":7,"column":18,"nodeType":"85","messageId":"86","endLine":7,"endColumn":22},{"ruleId":"83","severity":1,"message":"103","line":7,"column":24,"nodeType":"85","messageId":"86","endLine":7,"endColumn":32},{"ruleId":"83","severity":1,"message":"104","line":7,"column":63,"nodeType":"85","messageId":"86","endLine":7,"endColumn":73},{"ruleId":"83","severity":1,"message":"105","line":29,"column":12,"nodeType":"85","messageId":"86","endLine":29,"endColumn":20},{"ruleId":"83","severity":1,"message":"106","line":30,"column":11,"nodeType":"85","messageId":"86","endLine":30,"endColumn":22},{"ruleId":"83","severity":1,"message":"107","line":33,"column":11,"nodeType":"85","messageId":"86","endLine":33,"endColumn":22},{"ruleId":"83","severity":1,"message":"95","line":2,"column":16,"nodeType":"85","messageId":"86","endLine":2,"endColumn":25},{"ruleId":"83","severity":1,"message":"108","line":17,"column":9,"nodeType":"85","messageId":"86","endLine":17,"endColumn":16},{"ruleId":"83","severity":1,"message":"95","line":2,"column":16,"nodeType":"85","messageId":"86","endLine":2,"endColumn":25},{"ruleId":"97","severity":1,"message":"98","line":34,"column":13,"nodeType":"99","endLine":34,"endColumn":83},{"ruleId":"83","severity":1,"message":"95","line":2,"column":16,"nodeType":"85","messageId":"86","endLine":2,"endColumn":25},{"ruleId":"83","severity":1,"message":"109","line":4,"column":10,"nodeType":"85","messageId":"86","endLine":4,"endColumn":22},{"ruleId":"83","severity":1,"message":"110","line":4,"column":24,"nodeType":"85","messageId":"86","endLine":4,"endColumn":29},{"ruleId":"83","severity":1,"message":"111","line":4,"column":31,"nodeType":"85","messageId":"86","endLine":4,"endColumn":41},{"ruleId":"83","severity":1,"message":"112","line":7,"column":8,"nodeType":"85","messageId":"86","endLine":7,"endColumn":18},{"ruleId":"113","severity":1,"message":"114","line":18,"column":41,"nodeType":"115","messageId":"116","endLine":18,"endColumn":43},{"ruleId":"113","severity":1,"message":"114","line":19,"column":41,"nodeType":"115","messageId":"116","endLine":19,"endColumn":43},{"ruleId":"83","severity":1,"message":"117","line":1,"column":13,"nodeType":"85","messageId":"86","endLine":1,"endColumn":15},{"ruleId":"83","severity":1,"message":"118","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":16},{"ruleId":"83","severity":1,"message":"119","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":22},"@typescript-eslint/no-unused-vars","'firebaseApp' is defined but never used.","Identifier","unusedVar","no-native-reassign",["120"],"no-negated-in-lhs",["121"],"'logo' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'Component' is defined but never used.","'withRouter' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Conversation' is defined but never used.","'Button' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'IconButton' is defined but never used.","'anchorEl' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'classes' is assigned a value but never used.","'createStyles' is defined but never used.","'Theme' is defined but never used.","'makeStyles' is defined but never used.","'DraftsIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'fs' is defined but never used.","'prettier' is defined but never used.","'ReactDOMServer' is defined but never used.","no-global-assign","no-unsafe-negation"]