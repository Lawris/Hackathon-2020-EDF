[{"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/index.tsx":"1","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/reportWebVitals.ts":"2","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/App.tsx":"3","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/HomePage/HomePage.tsx":"4","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Login/Login.tsx":"5","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Main/Main.tsx":"6","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Settings/Settings.tsx":"7","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/ZoneSpecification/ZoneSpecification.tsx":"8","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/ConversationList/ConversationList.tsx":"9","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Conversation/Conversation.tsx":"10"},{"size":586,"mtime":1608258962166,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1608234521223,"results":"13","hashOfConfig":"12"},{"size":310,"mtime":1608239143372,"results":"14","hashOfConfig":"12"},{"size":764,"mtime":1608239272911,"results":"15","hashOfConfig":"12"},{"size":1352,"mtime":1608272816282,"results":"16","hashOfConfig":"12"},{"size":2663,"mtime":1608272861952,"results":"17","hashOfConfig":"12"},{"size":684,"mtime":1608272816283,"results":"18","hashOfConfig":"12"},{"size":2741,"mtime":1608272816284,"results":"19","hashOfConfig":"12"},{"size":1289,"mtime":1608272816282,"results":"20","hashOfConfig":"12"},{"size":1264,"mtime":1608239143375,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ap2qa1",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/index.tsx",[],["47","48"],"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/reportWebVitals.ts",[],"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/App.tsx",["49","50","51","52"],"import React from 'react';\nimport logo from './logo.svg';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\nimport './App.css';\nimport HomePage from './pages/HomePage/HomePage';\n\nfunction App() {\n  return (\n    <Router>\n      <HomePage/>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/HomePage/HomePage.tsx",[],"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Login/Login.tsx",["53","54","55"],"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Main/Main.tsx",["56","57","58","59","60","61","62","63","64"],"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Settings/Settings.tsx",["65","66"],"import React, {Component} from 'react';\n\ninterface SettingsState {\n    [key: string]: any;\n}\n\ninterface SettingsProps {}\n\nexport default class Settings extends React.Component<SettingsProps, SettingsState>{\n    constructor(props: SettingsProps){\n        super(props);\n        this.state = {\n            userMatricule: '',\n            userPassword: '',\n        }\n    }\n    render(){\n        return <div> Hello Settings\n        </div>\n    }\n\n}\n","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/ZoneSpecification/ZoneSpecification.tsx",["67","68"],"import { Button, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel } from '@material-ui/core';\nimport React, {Component} from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport imgcorse from './img-corse-map.png'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      position: 'absolute',\n        top: '17%',\n        left: '20%',\n    },\n    formControl: {\n      margin: theme.spacing(3),\n    },\n    imgmap:{\n        position: 'absolute',\n        right: '20%',\n        top: '17%',\n    },\n    buttonZone:{\n        position: 'absolute',\n        left: '30%',\n        bottom: '25%',\n    }\n  }),\n);\n\nexport default function Zone (){\n  const classes = useStyles();\n  return( \n        <div>\n            <img className={classes.imgmap} src={imgcorse} alt=\"image map corse\"/>\n            <div className={classes.root}>\n                <FormControl component=\"fieldset\" className={classes.formControl}>\n                    <FormLabel component=\"legend\">Sélectionner la ou les zone(s) d'intervention</FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                        value=\"BOGB\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"BOGB - Grand Bastia\"\n                        />\n                        <FormControlLabel\n                        value=\"BOCPO\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"BOCPO - Corte/Ghisonaccia\"\n                        />\n                        <FormControlLabel\n                        value=\"BOBA\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"BOBA - Balagne\"\n                        />\n                        <FormControlLabel\n                        value=\"BOES\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"BOES - Extrême Sud\"\n                        />\n                        <FormControlLabel\n                        value=\"BOVA\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"BOVA - Valincu\"\n                        />\n                        <FormControlLabel\n                        value=\"BOGA\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"BOGA - Grand Ajaccio\"\n                        />\n                    </FormGroup>\n                </FormControl>\n            </div>\n          <br/><br/>\n          <Button className={classes.buttonZone} variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\n            Confirmer\n          </Button>\n        </div>\n  )\n}\n","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/ConversationList/ConversationList.tsx",["69"],"import { Divider, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport React, {Component} from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n);\n\nexport default function ConversationList (){\n    const classes = useStyles();\n    return(\n      <div className={classes.root}>\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\n          <ListItem button>\n            <ListItemIcon>\n              <InboxIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Inbox\" />\n          </ListItem>\n          <ListItem button>\n            <ListItemIcon>\n              <DraftsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Drafts\" />\n          </ListItem>s\n        </List>\n        <Divider />\n        <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n          <ListItem button>\n            <ListItemText primary=\"Trash\"/>\n          </ListItem>\n        </List>\n      </div>\n    );\n}\n\n\n","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Conversation/Conversation.tsx",["70","71","72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":12},{"ruleId":"77","severity":1,"message":"81","line":3,"column":35,"nodeType":"79","messageId":"80","endLine":3,"endColumn":40},{"ruleId":"77","severity":1,"message":"82","line":3,"column":42,"nodeType":"79","messageId":"80","endLine":3,"endColumn":46},{"ruleId":"77","severity":1,"message":"83","line":3,"column":48,"nodeType":"79","messageId":"80","endLine":3,"endColumn":54},{"ruleId":"77","severity":1,"message":"84","line":2,"column":16,"nodeType":"79","messageId":"80","endLine":2,"endColumn":25},{"ruleId":"77","severity":1,"message":"85","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":20},{"ruleId":"86","severity":1,"message":"87","line":25,"column":17,"nodeType":"88","endLine":25,"endColumn":165},{"ruleId":"77","severity":1,"message":"82","line":4,"column":50,"nodeType":"79","messageId":"80","endLine":4,"endColumn":54},{"ruleId":"77","severity":1,"message":"89","line":6,"column":8,"nodeType":"79","messageId":"80","endLine":6,"endColumn":20},{"ruleId":"77","severity":1,"message":"90","line":7,"column":10,"nodeType":"79","messageId":"80","endLine":7,"endColumn":16},{"ruleId":"77","severity":1,"message":"91","line":7,"column":18,"nodeType":"79","messageId":"80","endLine":7,"endColumn":22},{"ruleId":"77","severity":1,"message":"92","line":7,"column":24,"nodeType":"79","messageId":"80","endLine":7,"endColumn":32},{"ruleId":"77","severity":1,"message":"93","line":7,"column":63,"nodeType":"79","messageId":"80","endLine":7,"endColumn":73},{"ruleId":"77","severity":1,"message":"94","line":29,"column":12,"nodeType":"79","messageId":"80","endLine":29,"endColumn":20},{"ruleId":"77","severity":1,"message":"95","line":30,"column":11,"nodeType":"79","messageId":"80","endLine":30,"endColumn":22},{"ruleId":"77","severity":1,"message":"96","line":33,"column":11,"nodeType":"79","messageId":"80","endLine":33,"endColumn":22},{"ruleId":"77","severity":1,"message":"84","line":2,"column":16,"nodeType":"79","messageId":"80","endLine":2,"endColumn":25},{"ruleId":"77","severity":1,"message":"97","line":17,"column":9,"nodeType":"79","messageId":"80","endLine":17,"endColumn":16},{"ruleId":"77","severity":1,"message":"84","line":2,"column":16,"nodeType":"79","messageId":"80","endLine":2,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":34,"column":13,"nodeType":"88","endLine":34,"endColumn":83},{"ruleId":"77","severity":1,"message":"84","line":2,"column":16,"nodeType":"79","messageId":"80","endLine":2,"endColumn":25},{"ruleId":"77","severity":1,"message":"98","line":1,"column":13,"nodeType":"79","messageId":"80","endLine":1,"endColumn":15},{"ruleId":"77","severity":1,"message":"99","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":16},{"ruleId":"77","severity":1,"message":"100","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":22},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'Component' is defined but never used.","'withRouter' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Conversation' is defined but never used.","'Button' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'IconButton' is defined but never used.","'anchorEl' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'classes' is assigned a value but never used.","'fs' is defined but never used.","'prettier' is defined but never used.","'ReactDOMServer' is defined but never used.","no-global-assign","no-unsafe-negation"]