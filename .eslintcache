[{"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/index.tsx":"1","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/reportWebVitals.ts":"2","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/App.tsx":"3","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/HomePage/HomePage.tsx":"4","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Login/Login.tsx":"5","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Main/Main.tsx":"6","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Settings/Settings.tsx":"7","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/ZoneSpecification/ZoneSpecification.tsx":"8","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/ConversationList/ConversationList.tsx":"9","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Conversation/Conversation.tsx":"10"},{"size":586,"mtime":1608258962166,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1608234521223,"results":"13","hashOfConfig":"12"},{"size":310,"mtime":1608239143372,"results":"14","hashOfConfig":"12"},{"size":764,"mtime":1608239272911,"results":"15","hashOfConfig":"12"},{"size":726,"mtime":1608272790712,"results":"16","hashOfConfig":"12"},{"size":2236,"mtime":1608272790713,"results":"17","hashOfConfig":"12"},{"size":442,"mtime":1608272790713,"results":"18","hashOfConfig":"12"},{"size":654,"mtime":1608272790720,"results":"19","hashOfConfig":"12"},{"size":666,"mtime":1608272790710,"results":"20","hashOfConfig":"12"},{"size":1264,"mtime":1608239143375,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ap2qa1",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/index.tsx",[],["47","48"],"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/reportWebVitals.ts",[],"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/App.tsx",["49","50","51","52"],"import React from 'react';\nimport logo from './logo.svg';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\nimport './App.css';\nimport HomePage from './pages/HomePage/HomePage';\n\nfunction App() {\n  return (\n    <Router>\n      <HomePage/>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/HomePage/HomePage.tsx",[],"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Login/Login.tsx",["53","54"],"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Main/Main.tsx",["55","56","57","58","59","60","61","62","63"],"import React  from 'react';\nimport MainProps from './MainProps';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Route, BrowserRouter as Router, Switch, Link } from 'react-router-dom';\nimport Settings from '../Settings/Settings';\nimport Conversation from '../Conversation/Conversation';\nimport { Button, Menu, MenuItem, AppBar, Toolbar, Typography, IconButton, BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport MessageIcon from '@material-ui/icons/Message';\nimport RoomIcon from '@material-ui/icons/LocationOn';\nimport ConversationList from '../ConversationList/ConversationList';\nimport Zone from '../ZoneSpecification/ZoneSpecification';\n\nconst useStyles = makeStyles({\n    wrapper:{\n        position: 'absolute',\n        width: '100%',\n        bottom: '0',\n    },\n    label:{\n        color: \"#000000\",\n    },\n    title:{\n\n    }\n  });\n\nconst Main: React.FunctionComponent<MainProps> = (props) => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const handleClick = (event: { currentTarget: React.SetStateAction<null>; }) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        EDF Messages Télétransmis\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <div>\n                <Router>\n                    <Switch>\n                        <Route path=\"/app\" component={Zone} exact/>\n                        <Route path=\"/app/conversationlist\" component={ConversationList} exact/>\n                        <Route path=\"/app/settings\" component={Settings} exact/>\n                    </Switch>\n                </Router>\n            </div>\n            <BottomNavigation\n                value={value}\n                onChange={(event, newValue) => {\n                    setValue(newValue);\n                }}\n                showLabels\n                className={classes.wrapper}>\n                <BottomNavigationAction label=\"Zones\" icon={<RoomIcon />} href=\"/app\"/>\n                <BottomNavigationAction label=\"Conversations\" icon={<MessageIcon />} href=\"/app/conversationlist\" />\n                <BottomNavigationAction label=\"Paramètres\" icon={<SettingsIcon />} href=\"/app/settings\" />\n            </BottomNavigation>\n        </div>\n    )\n}\n\nexport default Main;\n\n\n","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Settings/Settings.tsx",["64","65"],"import React, {Component} from 'react';\n\ninterface SettingsState {\n    [key: string]: any;\n}\n\ninterface SettingsProps {}\n\nexport default class Settings extends React.Component<SettingsProps, SettingsState>{\n    constructor(props: SettingsProps){\n        super(props);\n        this.state = {\n            userMatricule: '',\n            userPassword: '',\n        }\n    }\n    render(){\n        return <div> Hello Settings\n        </div>\n    }\n\n}\n","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/ZoneSpecification/ZoneSpecification.tsx",["66","67"],"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/ConversationList/ConversationList.tsx",["68"],"import { Divider, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport React, {Component} from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n);\n\nexport default function ConversationList (){\n    const classes = useStyles();\n    return(\n      <div className={classes.root}>\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\n          <ListItem button>\n            <ListItemIcon>\n              <InboxIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Inbox\" />\n          </ListItem>\n          <ListItem button>\n            <ListItemIcon>\n              <DraftsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Drafts\" />\n          </ListItem>s\n        </List>\n        <Divider />\n        <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n          <ListItem button>\n            <ListItemText primary=\"Trash\"/>\n          </ListItem>\n        </List>\n      </div>\n    );\n}\n\n\n","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Conversation/Conversation.tsx",["69","70","71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":12},{"ruleId":"76","severity":1,"message":"80","line":3,"column":35,"nodeType":"78","messageId":"79","endLine":3,"endColumn":40},{"ruleId":"76","severity":1,"message":"81","line":3,"column":42,"nodeType":"78","messageId":"79","endLine":3,"endColumn":46},{"ruleId":"76","severity":1,"message":"82","line":3,"column":48,"nodeType":"78","messageId":"79","endLine":3,"endColumn":54},{"ruleId":"76","severity":1,"message":"83","line":1,"column":16,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"84","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":20},{"ruleId":"76","severity":1,"message":"81","line":4,"column":50,"nodeType":"78","messageId":"79","endLine":4,"endColumn":54},{"ruleId":"76","severity":1,"message":"85","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":20},{"ruleId":"76","severity":1,"message":"86","line":7,"column":10,"nodeType":"78","messageId":"79","endLine":7,"endColumn":16},{"ruleId":"76","severity":1,"message":"87","line":7,"column":18,"nodeType":"78","messageId":"79","endLine":7,"endColumn":22},{"ruleId":"76","severity":1,"message":"88","line":7,"column":24,"nodeType":"78","messageId":"79","endLine":7,"endColumn":32},{"ruleId":"76","severity":1,"message":"89","line":7,"column":63,"nodeType":"78","messageId":"79","endLine":7,"endColumn":73},{"ruleId":"76","severity":1,"message":"90","line":29,"column":12,"nodeType":"78","messageId":"79","endLine":29,"endColumn":20},{"ruleId":"76","severity":1,"message":"91","line":30,"column":11,"nodeType":"78","messageId":"79","endLine":30,"endColumn":22},{"ruleId":"76","severity":1,"message":"92","line":33,"column":11,"nodeType":"78","messageId":"79","endLine":33,"endColumn":22},{"ruleId":"76","severity":1,"message":"83","line":2,"column":16,"nodeType":"78","messageId":"79","endLine":2,"endColumn":25},{"ruleId":"76","severity":1,"message":"93","line":17,"column":9,"nodeType":"78","messageId":"79","endLine":17,"endColumn":16},{"ruleId":"76","severity":1,"message":"83","line":2,"column":16,"nodeType":"78","messageId":"79","endLine":2,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":34,"column":13,"nodeType":"96","endLine":34,"endColumn":83},{"ruleId":"76","severity":1,"message":"83","line":2,"column":16,"nodeType":"78","messageId":"79","endLine":2,"endColumn":25},{"ruleId":"76","severity":1,"message":"97","line":1,"column":13,"nodeType":"78","messageId":"79","endLine":1,"endColumn":15},{"ruleId":"76","severity":1,"message":"98","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":16},{"ruleId":"76","severity":1,"message":"99","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":22},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'Component' is defined but never used.","'withRouter' is defined but never used.","'Conversation' is defined but never used.","'Button' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'IconButton' is defined but never used.","'anchorEl' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'classes' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'fs' is defined but never used.","'prettier' is defined but never used.","'ReactDOMServer' is defined but never used.","no-global-assign","no-unsafe-negation"]