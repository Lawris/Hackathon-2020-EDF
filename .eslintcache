[{"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/index.tsx":"1","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/reportWebVitals.ts":"2","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/App.tsx":"3","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/HomePage/HomePage.tsx":"4","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Login/Login.tsx":"5","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Main/Main.tsx":"6","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Settings/Settings.tsx":"7","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/ZoneSpecification/ZoneSpecification.tsx":"8","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/ConversationList/ConversationList.tsx":"9","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Conversation/Conversation.tsx":"10"},{"size":634,"mtime":1608302598991,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1608234521223,"results":"13","hashOfConfig":"12"},{"size":310,"mtime":1608239143372,"results":"14","hashOfConfig":"12"},{"size":764,"mtime":1608239272911,"results":"15","hashOfConfig":"12"},{"size":726,"mtime":1608302554323,"results":"16","hashOfConfig":"12"},{"size":639,"mtime":1608302554327,"results":"17","hashOfConfig":"12"},{"size":441,"mtime":1608302554328,"results":"18","hashOfConfig":"12"},{"size":653,"mtime":1608302554331,"results":"19","hashOfConfig":"12"},{"size":665,"mtime":1608302554322,"results":"20","hashOfConfig":"12"},{"size":1264,"mtime":1608239143375,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ap2qa1",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/index.tsx",[],"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/reportWebVitals.ts",[],["49","50"],"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/App.tsx",["51","52","53","54"],"import React from 'react';\nimport logo from './logo.svg';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\nimport './App.css';\nimport HomePage from './pages/HomePage/HomePage';\n\nfunction App() {\n  return (\n    <Router>\n      <HomePage/>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/HomePage/HomePage.tsx",[],"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Login/Login.tsx",["55","56","57"],"import { Button, TextField } from '@material-ui/core';\nimport React, {Component} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport LoginProps from '../../Model/LoginProps';\nimport './Login.css'\n\ninterface LoginState {\n    [key: string]: any;\n}\n\nexport default class Login extends React.Component<LoginProps, LoginState>{\n    constructor(props: LoginProps){\n        super(props);\n        this.state = {\n            userMatricule: '',\n            userPassword: '',\n        }\n    }\n\n    \n\n    render(){\n        return (\n            <div>\n                <img className=\"img-login\" src=\"https://storage.lebonguide.com/crop-1600x700/7/94/565CF6F3-EA3E-48DB-B255-668E5856CCEB.png\" alt=\"background-image\"/>\n                <div className=\"frame-login\">\n                    <div className='title-login'><h2>CONNEXION</h2></div>\n                    <div className=\"login-form\">\n                        <TextField className=\"input-login\" id=\"outlined-basic\" label=\"Matricule\" variant=\"outlined\" /><br/>\n                        <TextField className='input-login' id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" /><br/><br/>\n                        <Button className='button-login' variant=\"contained\" color=\"primary\" href=\"/app\">Connexion</Button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\n","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Main/Main.tsx",["58","59","60","61","62","63","64","65","66"],"import React  from 'react';\nimport MainProps from './MainProps';\nimport { Route, BrowserRouter as Router, Switch, Link } from 'react-router-dom';\nimport Settings from '../Settings/Settings';\nimport Conversation from '../Conversation/Conversation';\n\n\nconst Main: React.FunctionComponent<MainProps> = (props) => {\n    return (\n        <Router>\n            <Link to=\"/app/settings\">settings</Link>\n            <Switch>\n                <Route path=\"/app/settings\" component={Settings} exact/>\n                <Route path=\"/app/conversation\" component={Conversation} exact/>\n            </Switch>\n        </Router>\n    )\n}\n\nexport default Main;","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Settings/Settings.tsx",["67","68"],"import { Divider, List, ListItem, ListItemText } from '@material-ui/core';\nimport React, {Component} from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n);\n\nexport default function Settings (){\n  const classes = useStyles();\n  return( \n    <div> \n    <Divider />\n      <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n        <ListItem button>\n          <ListItemText primary=\"Trash\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n\n}\n","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/ZoneSpecification/ZoneSpecification.tsx",["69","70"],"import { Button, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel } from '@material-ui/core';\nimport React, {Component} from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport imgcorse from './img-corse-map.png'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      position: 'absolute',\n        top: '17%',\n        left: '20%',\n    },\n    formControl: {\n      margin: theme.spacing(3),\n    },\n    imgmap:{\n        position: 'absolute',\n        right: '20%',\n        top: '17%',\n    },\n    buttonZone:{\n        position: 'absolute',\n        left: '30%',\n        bottom: '25%',\n    }\n  }),\n);\n\nexport default function Zone (){\n  const classes = useStyles();\n  return( \n        <div>\n            <img className={classes.imgmap} src={imgcorse} alt=\"image map corse\"/>\n            <div className={classes.root}>\n                <FormControl component=\"fieldset\" className={classes.formControl}>\n                    <FormLabel component=\"legend\">Sélectionner la ou les zone(s) d'intervention</FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                        value=\"BOGB\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"BOGB - Grand Bastia\"\n                        />\n                        <FormControlLabel\n                        value=\"BOCPO\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"BOCPO - Corte/Ghisonaccia\"\n                        />\n                        <FormControlLabel\n                        value=\"BOBA\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"BOBA - Balagne\"\n                        />\n                        <FormControlLabel\n                        value=\"BOES\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"BOES - Extrême Sud\"\n                        />\n                        <FormControlLabel\n                        value=\"BOVA\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"BOVA - Valincu\"\n                        />\n                        <FormControlLabel\n                        value=\"BOGA\"\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"BOGA - Grand Ajaccio\"\n                        />\n                    </FormGroup>\n                </FormControl>\n            </div>\n          <br/><br/>\n          <Button className={classes.buttonZone} variant=\"contained\" color=\"primary\" href=\"/app/conversationlist\">\n            Confirmer\n          </Button>\n        </div>\n  )\n}\n","/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/ConversationList/ConversationList.tsx",["71","72","73","74","75","76","77"],"/Users/axel/Documents/Hackaton/hackathon-2020-edf/src/pages/Conversation/Conversation.tsx",["78","79","80"],"import * as fs from \"fs\";\nimport prettier from \"prettier\";\nimport React from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\n\ninterface ConvState {\n  [key: string]: any;\n}\n\ninterface ConvProps {\n  \n}\n\nexport default class Conversation extends React.Component<ConvProps, ConvState>{\n  constructor(props: ConvProps){\n    super(props);\n    this.state = {\n        userMatricule: '',\n        userPassword: '',\n    }\n  }\n  render() {\n    return (\n      <div>\n          <h1>Hello world</h1>\n          <div id=\"headerConvo\">\n            <div id=\"emetteur\">\n                id EMETTEUR = 7565\n                FRAU\n                AXEL\n                CEX\n                Priorité faible\n            </div>\n            <div id=\"infosConv\">\n                <button>Telecharger</button>\n            </div>\n            <div id=\"recepteur\">\n                id RECEPTEUR = 75675\n                FIGARELLI\n                Lisa\n                CCO\n                Priorité faible\n            </div>\n          </div>\n          <div id=\"convo\">\n              vide normalement et on ajoute els messages\n          </div>\n          <div id=\"userButtons\">\n              <button>Confirmer</button>\n              <button>Editer</button>\n          </div>\n      </div>\n    );\n  }\n}",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":12},{"ruleId":"85","severity":1,"message":"89","line":3,"column":35,"nodeType":"87","messageId":"88","endLine":3,"endColumn":40},{"ruleId":"85","severity":1,"message":"90","line":3,"column":42,"nodeType":"87","messageId":"88","endLine":3,"endColumn":46},{"ruleId":"85","severity":1,"message":"91","line":3,"column":48,"nodeType":"87","messageId":"88","endLine":3,"endColumn":54},{"ruleId":"85","severity":1,"message":"92","line":2,"column":16,"nodeType":"87","messageId":"88","endLine":2,"endColumn":25},{"ruleId":"85","severity":1,"message":"93","line":3,"column":10,"nodeType":"87","messageId":"88","endLine":3,"endColumn":20},{"ruleId":"94","severity":1,"message":"95","line":25,"column":17,"nodeType":"96","endLine":25,"endColumn":165},{"ruleId":"85","severity":1,"message":"90","line":4,"column":50,"nodeType":"87","messageId":"88","endLine":4,"endColumn":54},{"ruleId":"85","severity":1,"message":"97","line":6,"column":8,"nodeType":"87","messageId":"88","endLine":6,"endColumn":20},{"ruleId":"85","severity":1,"message":"98","line":7,"column":10,"nodeType":"87","messageId":"88","endLine":7,"endColumn":16},{"ruleId":"85","severity":1,"message":"99","line":7,"column":18,"nodeType":"87","messageId":"88","endLine":7,"endColumn":22},{"ruleId":"85","severity":1,"message":"100","line":7,"column":24,"nodeType":"87","messageId":"88","endLine":7,"endColumn":32},{"ruleId":"85","severity":1,"message":"101","line":7,"column":63,"nodeType":"87","messageId":"88","endLine":7,"endColumn":73},{"ruleId":"85","severity":1,"message":"102","line":29,"column":12,"nodeType":"87","messageId":"88","endLine":29,"endColumn":20},{"ruleId":"85","severity":1,"message":"103","line":30,"column":11,"nodeType":"87","messageId":"88","endLine":30,"endColumn":22},{"ruleId":"85","severity":1,"message":"104","line":33,"column":11,"nodeType":"87","messageId":"88","endLine":33,"endColumn":22},{"ruleId":"85","severity":1,"message":"92","line":2,"column":16,"nodeType":"87","messageId":"88","endLine":2,"endColumn":25},{"ruleId":"85","severity":1,"message":"105","line":17,"column":9,"nodeType":"87","messageId":"88","endLine":17,"endColumn":16},{"ruleId":"85","severity":1,"message":"92","line":2,"column":16,"nodeType":"87","messageId":"88","endLine":2,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":34,"column":13,"nodeType":"96","endLine":34,"endColumn":83},{"ruleId":"85","severity":1,"message":"92","line":2,"column":16,"nodeType":"87","messageId":"88","endLine":2,"endColumn":25},{"ruleId":"85","severity":1,"message":"106","line":4,"column":10,"nodeType":"87","messageId":"88","endLine":4,"endColumn":22},{"ruleId":"85","severity":1,"message":"107","line":4,"column":24,"nodeType":"87","messageId":"88","endLine":4,"endColumn":29},{"ruleId":"85","severity":1,"message":"108","line":4,"column":31,"nodeType":"87","messageId":"88","endLine":4,"endColumn":41},{"ruleId":"85","severity":1,"message":"109","line":7,"column":8,"nodeType":"87","messageId":"88","endLine":7,"endColumn":18},{"ruleId":"110","severity":1,"message":"111","line":18,"column":41,"nodeType":"112","messageId":"113","endLine":18,"endColumn":43},{"ruleId":"110","severity":1,"message":"111","line":19,"column":41,"nodeType":"112","messageId":"113","endLine":19,"endColumn":43},{"ruleId":"85","severity":1,"message":"114","line":1,"column":13,"nodeType":"87","messageId":"88","endLine":1,"endColumn":15},{"ruleId":"85","severity":1,"message":"115","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":16},{"ruleId":"85","severity":1,"message":"116","line":4,"column":8,"nodeType":"87","messageId":"88","endLine":4,"endColumn":22},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'Component' is defined but never used.","'withRouter' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Conversation' is defined but never used.","'Button' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'IconButton' is defined but never used.","'anchorEl' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'classes' is assigned a value but never used.","'createStyles' is defined but never used.","'Theme' is defined but never used.","'makeStyles' is defined but never used.","'DraftsIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'fs' is defined but never used.","'prettier' is defined but never used.","'ReactDOMServer' is defined but never used.","no-global-assign","no-unsafe-negation"]